一、git
1.1、创建gitHub仓库
http://book.jirengu.com/fe/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/%E5%89%8D%E7%BD%AE%E7%9F%A5%E8%AF%86/Git.html // git教程在最后
右上角选择new respository创建一个新的项目
然后记得勾选Initialize this repository with a README，创建完成

1.2、将版本库克隆到本地：
git clone git@github.com:L-Congratulations/dawn.git  // 注意这里是ssh协议地址

1.3、常用命令：
git pull 把远程仓库的变动更新合并到本地仓库
git push origin master 把当前本地库里的改动推送到远程库(origin)的master 分支

二、语义化：通过标签对页面内容进行划分。
2.1、结构清晰：便于人理解维护。有利于搜索引擎及爬虫识别页面信息。
2.2、即使没有css等样式效果的情况下也能呈现较好的内容结构与代码结构

三、css选择器： 选择出我们需要添加样式的html元素。
3.1、元素选择器：
p {
  color: red;
}
3.2、ID和类选择器：
#notification {
  font-size: 24px;
}
3.3、通用选择器：
* {
  box-sizing: border-box;
}
3.4、属性选择器：
[attr]  [attr] 选择包含 attr 属性的所有元素，不论 attr 的值为何：
[disabled] {
  cursor: not-allowed;
}

[attr=val]  [attr=val] 仅选择 attr 属性被赋值为 val 的所有元素：
[data-color="gray"] {
  color: #ccc;
}
[attr~=val] [attr~=val] 仅选择 attr 属性的值（以空格间隔出多个值）中有包含 val 值的所有元素，比如位于被空格分隔的多个类（class）中的一个类。

[attr*=val] [attr*=val] 选择 attr 属性的值中包含字符串 val 的元素：
[title*="fuck"] {
  display: none;
}
[attr^=val] [attr^=val] 选择 attr 属性的值以 val 开头（包括val）的元素：
[href^="http://"] {
  background-color: #f0ad4e;
}
[attr$=val] [attr$=val] 选择 attr 属性的值以 val 结尾（包括val）的元素：
[src$="gif"] {
  border: 1px solid #ccc;
}
[attr|=val] [attr|=val] 选择 attr 属性的值以 val（包括val）或 val-开头的元素（-用来处理语言编码）：
[lang|="zh"] {
  font-family: '微软雅黑';
}
3.5、伪类选择器：
a:link { ... }
a:visited { ... }
a:hover { ... }
a:active { ... }
li:first-child { ... }
li:last-child { ... }
body :not(p) { ... }
p:not(.warning) { ... }

3.6、伪元素
::after

::after

.clearfix::after {
  content: '';
  clear: both;
  display: block;
}
::before

::before

.happy::before {
  content: '😁';
}
::selection

::selection 应用于文档中被用户高亮的部分（比如鼠标选中的部分）。

p::selection {
  color: white;
  background: blue;
}
::backdrop

::backdrop 实验特性

::first-letter

::first-letter 选中一整块文字第一行的第一个字母，当文字所处的行之前没有其他内容（如图片和内联的表格）。

::first-line

::first-line 将样式只应用于一个块状元素的首行。

::-webkit-input-placeholder

/* 设置 input 元素 placeholder 的字体颜色 */
input::-webkit-input-placeholder {
  color: #aaa;
}
3.7、组合选择器：
A, B：
.author, .famous {
  font-weight: bold;
}
A B
A > B
A + B
A ~ B



四、盒模型：是一个用来包裹html内容的盒子，包括内容，border，margin，padding。
4.1、盒模型怪异模式和标准模式：
标准模式：box-sizing:content-box;
怪异模式：box-sizing:border-box;
标准模式会被设置的padding撑开，而怪异模式则相当于将盒子的大小固定好，再将内容装入盒子。盒子的大小并不会被padding所撑开。
4.2、怪异模式是“部分浏览器在支持W3C标准的同时还保留了原来的解析模式”，怪异模式主要表现在IE内核的浏览器。

当不对doctype进行定义时，会触发怪异模式。

在标准模式下，一个块的总宽度= width + margin(左右) + padding(左右) + border(左右)

在怪异模式下，一个块的总宽度= width + margin(左右)（即width已经包含了padding和border值）

五、浮动：浮动元素自身会形成一个块级框，不管之前是什么
5.1、清除浮动：浮动会导致父容器高度塌陷，因此要清除浮动。
 clear: both;
5.2、浮动元素超出父元素边界的方法有两种：一种是浮动元素的宽度大于父元素的宽度，另一种就是设置负外边距。如果浮动元素存在负外边距，
且浮动元素与正常流元素重叠

六、定位：定位就是通过设置 position 属性的值来覆盖默认的布局方式。
6.1、相对定位：position: relative 就是“相对自己定位”
6.2、绝对定位：position: absolute 绝对定位元素脱离正常文档流，默认的定位上下文是 <html>。假如你想设定某个绝对定位元素的定位上下文，
则需要在这个元素的某个祖先元素上设置 position: relative。
6.3、固定定位：position: fixed 相对浏览器窗口进行定位。因此当滚动产生时，固定定位元素依然处于窗口的某个固定位置。
6.4、粘性定位：position: sticky 是相对定位和固定定位的结合。默认情况下表现为相对定位，当浏览器窗口顶端与元素的距离等于 top 属性的值时，
转变为固定定位。

七、居中：
.space {
  width: 100vw;
  height: 100vh;  /* 设置宽高以显示居中效果 */
  display: flex;  /* 弹性布局 */
  align-items: center;  /* 垂直居中 */
  justify-content: center;  /* 水平居中 */
}

八、兼容：
8.1、兼容产生的原因：新的功能旧版本不支持，不同浏览器实现方式不同。
8.2、解决思路：
根据产品需求选择合适技术（库）。
根据兼容需求选择兼容工具(html5shiv.js-用于解决IE9以下版本浏览器对HTML5新增标签不识别，并导致CSS不起作用的问题。
使用方法
<!--[if lt IE 9]>
<script type="text/javascript"  src="http://www.ijquery.cn/js/html5shiv.js"></script>
<![endif]-->、
respond.js、css reset、normalize.css、Modernizr)
最后使用条件注释、CSS Hack、js 能力检测做一些补漏。
或者使用替代方法，比如自己封装一个方法来实现相同的效果。
