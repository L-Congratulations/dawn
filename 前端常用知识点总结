一、git
1.1、创建gitHub仓库
http://book.jirengu.com/fe/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/%E5%89%8D%E7%BD%AE%E7%9F%A5%E8%AF%86/Git.html // git教程在最后
右上角选择new respository创建一个新的项目
然后记得勾选Initialize this repository with a README，创建完成

1.2、将版本库克隆到本地：
git clone git@github.com:L-Congratulations/dawn.git  // 注意这里是ssh协议地址

1.3、常用命令：
git pull 把远程仓库的变动更新合并到本地仓库
git push origin master 把当前本地库里的改动推送到远程库(origin)的master 分支

二、语义化：通过标签对页面内容进行划分。
2.1、结构清晰：便于人理解维护。有利于搜索引擎及爬虫识别页面信息。
2.2、即使没有css等样式效果的情况下也能呈现较好的内容结构与代码结构

三、css选择器： 选择出我们需要添加样式的html元素。
3.1、元素选择器：
p {
  color: red;
}
3.2、ID和类选择器：
#notification {
  font-size: 24px;
}
3.3、通用选择器：
* {
  box-sizing: border-box;
}
3.4、属性选择器：
[attr]  [attr] 选择包含 attr 属性的所有元素，不论 attr 的值为何：
[disabled] {
  cursor: not-allowed;
}

[attr=val]  [attr=val] 仅选择 attr 属性被赋值为 val 的所有元素：
[data-color="gray"] {
  color: #ccc;
}
[attr~=val] [attr~=val] 仅选择 attr 属性的值（以空格间隔出多个值）中有包含 val 值的所有元素，比如位于被空格分隔的多个类（class）中的一个类。

[attr*=val] [attr*=val] 选择 attr 属性的值中包含字符串 val 的元素：
[title*="fuck"] {
  display: none;
}
[attr^=val] [attr^=val] 选择 attr 属性的值以 val 开头（包括val）的元素：
[href^="http://"] {
  background-color: #f0ad4e;
}
[attr$=val] [attr$=val] 选择 attr 属性的值以 val 结尾（包括val）的元素：
[src$="gif"] {
  border: 1px solid #ccc;
}
[attr|=val] [attr|=val] 选择 attr 属性的值以 val（包括val）或 val-开头的元素（-用来处理语言编码）：
[lang|="zh"] {
  font-family: '微软雅黑';
}
3.5、伪类选择器：
a:link { ... }
a:visited { ... }
a:hover { ... }
a:active { ... }
li:first-child { ... }
li:last-child { ... }
body :not(p) { ... }
p:not(.warning) { ... }

3.6、伪元素
::after

::after

.clearfix::after {
  content: '';
  clear: both;
  display: block;
}
::before

::before

.happy::before {
  content: '😁';
}
::selection

::selection 应用于文档中被用户高亮的部分（比如鼠标选中的部分）。

p::selection {
  color: white;
  background: blue;
}
::backdrop

::backdrop 实验特性

::first-letter

::first-letter 选中一整块文字第一行的第一个字母，当文字所处的行之前没有其他内容（如图片和内联的表格）。

::first-line

::first-line 将样式只应用于一个块状元素的首行。

::-webkit-input-placeholder

/* 设置 input 元素 placeholder 的字体颜色 */
input::-webkit-input-placeholder {
  color: #aaa;
}
3.7、组合选择器：
A, B：
.author, .famous {
  font-weight: bold;
}
A B
A > B
A + B
A ~ B

选择器	示例	示例说明	CSS
.class	.intro	选择所有class="intro"的元素	1
#id	#firstname	选择所有id="firstname"的元素	1
*	*	选择所有元素	2
element	p	选择所有<p>元素	1
element,element	div,p	选择所有<div>元素和<p>元素	1
element element	div p	选择<div>元素内的所有<p>元素	1
element>element	div>p	选择所有父级是 <div> 元素的 <p> 元素	2
element+element	div+p	选择所有紧接着<div>元素之后的<p>元素	2
[attribute]	[target]	选择所有带有target属性元素	2
[attribute=value]	[target=-blank]	选择所有使用target="-blank"的元素	2
[attribute~=value]	[title~=flower]	选择标题属性包含单词"flower"的所有元素	2
[attribute|=language]	[lang|=en]	选择一个lang属性的起始值="EN"的所有元素	2
:link	a:link	选择所有未访问链接	1
:visited	a:visited	选择所有访问过的链接	1
:active	a:active	选择活动链接	1
:hover	a:hover	选择鼠标在链接上面时	1
:focus	input:focus	选择具有焦点的输入元素	2
:first-letter	p:first-letter	选择每一个<P>元素的第一个字母	1
:first-line	p:first-line	选择每一个<P>元素的第一行	1
:first-child	p:first-child	指定只有当<p>元素是其父级的第一个子级的样式。	2
:before	p:before	在每个<p>元素之前插入内容	2
:after	p:after	在每个<p>元素之后插入内容	2
:lang(language)	p:lang(it)	选择一个lang属性的起始值="it"的所有<p>元素	2
element1~element2	p~ul	选择p元素之后的每一个ul元素	3
[attribute^=value]	a[src^="https"]	选择每一个src属性的值以"https"开头的元素	3
[attribute$=value]	a[src$=".pdf"]	选择每一个src属性的值以".pdf"结尾的元素	3
[attribute*=value]	a[src*="runoob"]	选择每一个src属性的值包含子字符串"runoob"的元素	3
:first-of-type	p:first-of-type	选择每个p元素是其父级的第一个p元素	3
:last-of-type	p:last-of-type	选择每个p元素是其父级的最后一个p元素	3
:only-of-type	p:only-of-type	选择每个p元素是其父级的唯一p元素	3
:only-child	p:only-child	选择每个p元素是其父级的唯一子元素	3
:nth-child(n)	p:nth-child(2)	选择每个p元素是其父级的第二个子元素	3
:nth-last-child(n)	p:nth-last-child(2)	选择每个p元素的是其父级的第二个子元素，从最后一个子项计数	3
:nth-of-type(n)	p:nth-of-type(2)	选择每个p元素是其父级的第二个p元素	3
:nth-last-of-type(n)	p:nth-last-of-type(2)	选择每个p元素的是其父级的第二个p元素，从最后一个子项计数	3
:last-child	p:last-child	选择每个p元素是其父级的最后一个子级。	3
:root	:root	选择文档的根元素	3
:empty	p:empty	选择每个没有任何子级的p元素（包括文本节点）	3
:target	#news:target	选择当前活动的#news元素（包含该锚名称的点击的URL）	3
:enabled	input:enabled	选择每一个已启用的输入元素	3
:disabled	input:disabled	选择每一个禁用的输入元素	3
:checked	input:checked	选择每个选中的输入元素	3
:not(selector)	:not(p)	选择每个并非p元素的元素	3
::selection	::selection	匹配元素中被用户选中或处于高亮状态的部分	3
:out-of-range	:out-of-range	匹配值在指定区间之外的input元素	3
:in-range	:in-range	匹配值在指定区间之内的input元素	3
:read-write	:read-write	用于匹配可读及可写的元素	3
:read-only	:read-only	用于匹配设置 "readonly"（只读） 属性的元素	3
:optional	:optional	用于匹配可选的输入元素	3
:required	:required	用于匹配设置了 "required" 属性的元素	3
:valid	:valid	用于匹配输入值为合法的元素	3
:invalid	:invalid	用于匹配输入值为非法的元素	3
