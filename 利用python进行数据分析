一、准备工作
本书讲的是利用python进行数据控制、处理、整理、分析等方面的具体细节和基本要点。同时，它也是利用python进行科学计算的实用指南。
1.1、重要的python库：
（1）、NumPy（Numerical Python）：是python科学计算的基础包。本书大部分内容都基于NumPy以及构建于其上的库。它提供了以下功能（不限于此）：
《1》、快速高效的多位数组对象ndarray
《2》、对于数组执行元素级计算以及直接对数组执行数学运算的函数。
《3》、用于读写硬盘上基于数组的数据集的工具。
《4》、线性代数运算、傅里叶变换，以及随机数生成。
《5》、用于将C、C++、Fortran代码集成到python的工具。
除了为python提供快速的数组处理能力，Nympy在数据分析方面还有另外一个主要作用，即作为在算法之间传递数据的容器。对于数值型数据，NumPy数组在存储和处理数据时要被内置的python数据结构高效得多。此外，由低级语音（比如C和Fortean）编写的库可以直接操作NumPy数组中的数据，无需进行任何数据复制工作。
（2）pandas
pandas提供了使我们能够快速便捷地处理结构化数据的大量数据结构和函数。你很快就会发现，它是使python成为强大而高效的数据分析环境的重要因素之一。本书用得最多的pandas对象是DataFrame，踏实一个面向列（column-oriented）的二维表结构，且含有行标和列标：

pandas兼具NumPy高性能的数组计算功能以及电子表格和关系型数据库（如SQL）灵活的数据处理功能。它提供了复杂精细的索引功能，以便更为便捷地完成重塑、切片和切块、聚合以及选取数据子集等操作。pandas将是我在本书中使用的主要工具。

对于金融行业的用户，pandas提供了大量适用于金融数据的高性能时间序列功能和工具。事实上，我一开始就是把pandas设计为一款适用于金融数据分析应用的工具。
（3）、matplotlib：
matplotlib是最流行的用于回执数据图表的python库。它非常适合创建出版物上用得图表。他跟IPython结合得很好，因而提供了一种非常好用的交互式数据绘图环境。回执的图表也是交互式的，你可以利用绘图窗口中的工具栏放大图表中的某个区域火堆整个图表进行平移浏览。
（4）、IPython
IPython是python科学计算标准工具集的组成部分，他将其他所有的东西联系到了一起。他为交互式和探索式计算提供了一个强健而高效的环境他是一个增强的python shell，目的是提高编写、测试、调试python代码的速度。它主要用于交互式数据处理和利用matplotlib对数据进行可视化处理。我在使用python编程时，经常会用到IPython，包括运行、调试和测试代码。
除标准的基于终端的IPython shell外，该项目还提供了：
*一个类似于mathematica的html笔记本
*一个基于Qt框架的GUI控制台，其中含有绘图。多行编辑以及语法高亮显示等功能。
*用于交互式并行和分布式计算的基础架构。
我将在一章中专门讲解IPython，详细地介绍其大部分功能。强烈建议在阅读本书个过程中使用IPython。
（5）、SciPy
SciPy是一组专门解决科学计算中各种标准问题域的包的集合，主要包括下面这些包：
*scipy.integrate:数值积分例程和微分方程求解器
*scipy.linalg:扩展了由numpy.linalg提供的线性代数例程和矩阵分解功能。
*scipy.optimize:函数优化器（最小化器）以及根查找算法。
*scipy.signal：信号处理工具。
*scipy.sparse:稀疏矩阵和稀疏线性系统求解器。
*scipy.special:SPECFUN（这是一个实现了血多常用数学函数（如伽马函数）的Fortran库）的包装器。
*scipy.stats:标准连续喝离散概率分布（如密度函数、采样器、连续分布函数等）、各种统计检验方法，以及更好的描述统计法。
*scipy.weave:利用内联C++代码加速数组计算的工具。
NumPy跟SciPy的有机结合完全可以替代MATLAB的计算功能呢（包括其插件工具箱）。


二、安装和设置
