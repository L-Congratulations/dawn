一、windows集成python2和python3
https://www.cnblogs.com/thunderLL/p/6643022.html


二、python入门
exit()退出Python
2.1、命令行模式和Python交互模式
在命令行模式下，可以执行python进入Python交互式环境，也可以执行python hello.py运行一个.py文件。

Hello.py在哪个文件目录下就要在哪个文件目录下执行python Hello.py 否则会报错找不到要执行的.py文件
进入python交互界面后只能识别python语法，执行 python Hello.py会报错（执行一个.py文件只能在命令行模式执行）

2.2、python输出
print()函数也可以接受多个字符串，用逗号“,”隔开，就可以连成一串输出：
print()会依次打印每个字符串，遇到逗号“,”会输出一个空格，因此，输出的字符串是这样拼起来的：

print ('这是','第一个','中间是           多个空格') 
输出的时候输出为：这是 第一个 中间是           两个空格（逗号翻译为了空格，引号里面的空格直接翻译为了空格并输出）

2.3、输入
Python提供了一个input()，可以让用户输入字符串，并存放到一个变量里
当你输入name = input()并按下回车后，Python交互式命令行就在等待你的输入了。这时，你可以输入任意字符，然后按回车后完成输入。

输入完成后，不会有任何提示，Python交互式命令行又回到>>>状态了。那我们刚才输入的内容到哪去了？答案是存放到name变量里了
可以直接输入name查看变量内容：
name = input()
print('名字是： ',name)

input()可以让你显示一个字符串来提示用户：
name = input('请输入你的名字：')
print('名字是： ',name)


输入是Input，输出是Output，因此，我们把输入输出统称为Input/Output，或者简写为IO。


三、python基础：
3.1、注释：
以#开头的语句是注释，注释是给人看的，可以是任意内容，解释器会忽略掉注释。

3.2、语句：
Python的语法比较简单，采用缩进方式，每一行都是一个语句，当语句以冒号:结尾时，缩进的语句视为代码块。
# print absolute value of an integer:
a = 100
if a >= 0:
    print(a)
else:
    print(-a)

3.3、数据类型和变量
字符串：如果字符串内部既包含'又包含"怎么办？可以用转义字符\来标识，比如：'I\'m \"OK\"!'
布尔值：布尔值可以用and、or和not运算。
>>> True and True
True
空值：空值是Python里一个特殊的值，用None表示。None不能理解为0，因为0是有意义的，而None是一个特殊的空值。
变量：变量在程序中就是用一个变量名表示了，变量名必须是大小写英文、数字和_的组合，且不能用数字开头
a = 1
变量a是一个整数。

t_007 = 'T007'
变量t_007是一个字符串。
在Python中，等号=是赋值语句，可以把任意数据类型赋值给变量，同一个变量可以反复赋值，而且可以是不同类型的变量
a = 123 # a是整数
print(a)
a = 'ABC' # a变为字符串
print(a)
这种变量本身类型不固定的语言称之为动态语言，与之对应的是静态语言。

请不要把赋值语句的等号等同于数学的等号。比如下面的代码：

x = 10
x = x + 2
在程序中，赋值语句先计算右侧的表达式x + 2，得到结果12，再赋给变量x。由于x之前的值是10，重新赋值后，x的值变成12。

变量在内存中的表示：
Python解释器干了两件事情：
在内存中创建了一个'ABC'的字符串；
在内存中创建了一个名为a的变量，并把它指向'ABC'。
如：a = 'ABC'
b = a
a = 'XYZ'
print(b)
输出结果是ABC
逻辑：python在内存中创建了一个字符串，然后创建了一个名为a的变量，a指向'ABC'，
又创建了一个名为b的变量，变量b指向变量a所指向的数据，此时b也是指向'ABC'，
又在内存中创建一个'XYZ'的字符串，并把a指向'XYZ',
因为b已经指向了'ABC'，并且没有再次改变他的指向，所以b的值就是'ABC'。

3.4、运算符：
/除法计算结果是浮点数，即使是两个整数恰好整除，结果也是浮点数：

>>> 9 / 3
3.0
还有一种除法是//，称为地板除，两个整数的除法仍然是整数：

>>> 10 // 3
3
你没有看错，整数的地板除//永远是整数，即使除不尽。要做精确的除法，使用/就可以。

因为//除法只取结果的整数部分，所以Python还提供一个余数运算，可以得到两个整数相除的余数：

>>> 10 % 3
1
无论整数做//除法还是取余数，结果永远是整数，所以，整数运算结果永远是精确的。

四、安装mysql
在百度软件中心中选5.7.17版本安装 http://rj.baidu.com/soft/detail/17534.html
教程：http://www.jb51.net/article/119685.htm
